{"_id":"jstorage","_rev":"3-08710e9c70bbea4655406918bebacf35","name":"jstorage","description":"jStorage is a cross-browser key-value store database to store data locally in the browser - jStorage supports all major browsers, both in desktop (yes - even Internet Explorer 6) and in mobile.","dist-tags":{"latest":"0.4.8"},"versions":{"0.4.8":{"name":"jstorage","version":"0.4.8","description":"jStorage is a cross-browser key-value store database to store data locally in the browser - jStorage supports all major browsers, both in desktop (yes - even Internet Explorer 6) and in mobile.","main":"jstorage.js","directories":{"example":"example","test":"tests"},"scripts":{"test":"echo \"Error: no test specified\" && exit 1"},"repository":{"type":"git","url":"git+https://github.com/aibarra988/jstorage.git"},"keywords":["key"],"author":{"name":"Andris Reinman","email":"andris.reinman@gmail.com"},"license":"UNLICENSED","bugs":{"url":"https://github.com/aibarra988/jstorage/issues"},"homepage":"https://github.com/aibarra988/jstorage#readme","gitHead":"9fac23fbf88365de2c677a6dda694b2f9d663f0b","_id":"jstorage@0.4.8","_shasum":"29380072d6d3c1a0e2a5893ff1ee3b1cfc74f9a0","_from":".","_npmVersion":"2.12.1","_nodeVersion":"0.12.7","_npmUser":{"name":"aibarra988","email":"aibarra988@gmail.com"},"dist":{"shasum":"29380072d6d3c1a0e2a5893ff1ee3b1cfc74f9a0","tarball":"https://registry.npmjs.org/jstorage/-/jstorage-0.4.8.tgz"},"maintainers":[{"name":"aibarra988","email":"aibarra988@gmail.com"}]}},"readme":"## NB!\n\n**If you don't need to support older Internet Explorer Versions (IE7 and below), use [simpleStorage](https://github.com/andris9/simpleStorage) instead.**\n\n----\n\n# jStorage\n\n**jStorage** is a cross-browser key-value store database to store data locally in the browser - jStorage supports all major browsers, both in **desktop** (yes - even Internet Explorer 6) and in **mobile**.\n\nAdditionally jStorage is library agnostic, it works well with any other JavaScript library on the same webpage, be it jQuery, Prototype, MooTools or something else. Though you still need to have either a third party library (Prototype, MooTools) or [JSON2](https://github.com/douglascrockford/JSON-js/blob/master/json2.js) on the page to support older IE versions.\n\njStorage supports storing Strings, Numbers, JavaScript objects, Arrays and even native XML nodes which kind of makes it a JSON storage. jStorage also supports setting TTL values for auto expiring stored keys and - best of all - notifying other tabs/windows when a key has been changed, which makes jStorage also a local PubSub platform for web applications.\n\njStorage is pretty small, about 7kB when minified, 3kB gzipped.\n\n## Function reference\n\n### set(key, value[, options])\n\n```javascript\n$.jStorage.set(key, value, options)\n```\n\nSaves a value to local storage. key needs to be string otherwise an exception is thrown. value can be any JSONeable value, including objects and arrays or a XML node.\nCurrently XML nodes can't be nested inside other objects: `$.jStorage.set(\"xml\", xml_node)` is OK but `$.jStorage.set(\"xml\", {xml: xml_node})` is not.\n\nOptions is an optional options object. Currently only available option is options.TTL which can be used to set the TTL value to the key `$.jStorage.set(key, value, {TTL: 1000})`. NB - if no TTL option value has been set, any currently used TTL value for the key will be removed.\n\n### get(key[, default])\n\n```javascript\nvalue = $.jStorage.get(key)\nvalue = $.jStorage.get(key, \"default value\")\n```\n\nget retrieves the value if key exists, or default if it doesn't. key needs to be string otherwise an exception is thrown. default can be any value.\n\n### deleteKey(key)\n\n```javascript\n$.jStorage.deleteKey(key)\n```\n\nRemoves a key from the storage. key needs to be string otherwise an exception is thrown.\n\n### setTTL(key, ttl)\n\n```javascript\n$.jStorage.set(\"mykey\", \"keyvalue\");\n$.jStorage.setTTL(\"mykey\", 3000); // expires in 3 seconds\n```\n\nSets a TTL (in milliseconds) for an existing key. Use 0 or negative value to clear TTL.\n\n### getTTL(key)\n\n```javascript\nttl = $.jStorage.getTTL(\"mykey\"); // TTL in milliseconds or 0\nGets remaining TTL (in milliseconds) for a key or 0 if not TTL has been set.\n```\n\n### flush()\n\n```javascript\n$.jStorage.flush()\n```\n\nClears the cache.\n\n### index()\n\n```javascript\n$.jStorage.index()\n```\n\nReturns all the keys currently in use as an array.\n\n```javascript\nvar index = $.jStorage.index();\nconsole.log(index); // [\"key1\",\"key2\",\"key3\"]\n```\n\n### storageSize()\n\n```javascript\n$.jStorage.storageSize()\n```\n\nReturns the size of the stored data in bytes\n\n### currentBackend()\n\n```javascript\n$.jStorage.currentBackend()\n```\n\nReturns the storage engine currently in use or false if none\n\n### reInit()\n\n```javascript\n$.jStorage.reInit()\n```\n\nReloads the data from browser storage\n\n### storageAvailable()\n\n```javascript\n$.jStorage.storageAvailable()\n```\n\nReturns true if storage is available\n\n### subscribe(channel, callback)\n\n```javascript\n$.jStorage.subscribe(\"ch1\", function(channel, payload){\n    console.log(payload+ \" from \" + channel);\n});\n```\n\nSubscribes to a Publish/Subscribe channel (see demo)\n\n### publish(channel, payload)\n\n```javascript\n$.jStorage.publish(\"ch1\", \"data\");\n```\n\nPublishes payload to a Publish/Subscribe channel (see demo)\n\n### listenKeyChange(key, callback)\n\n```javascript\n$.jStorage.listenKeyChange(\"mykey\", function(key, action){\n    console.log(key + \" has been \" + action);\n});\n```\n\nListens for updates for selected key. NB! even updates made in other windows/tabs are reflected, so this feature can also be used for some kind of publish/subscribe service.\n\nIf you want to listen for any key change, use `\"*\"` as the key name\n\n```javascript\n$.jStorage.listenKeyChange(\"*\", function(key, action){\n    console.log(key + \" has been \" + action);\n});\n```\n\n### stopListening(key[, callback])\n\n```javascript\n$.jStorage.stopListening(\"mykey\"); // cancel all listeners for \"mykey\" change\n```\n\nStops listening for key change. If callback is set, only the used callback will be cleared, otherwise all listeners will be dropped.\n\n## Donate\n\nSupport jStorage development\n\n[![Donate to author](https://www.paypalobjects.com/en_US/i/btn/btn_donate_SM.gif)](https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&hosted_button_id=DB26KWR2BQX5W)\n\n## Features\n\njStorage supports the following features:\n\n  * store and retrieve data from browser storage using any JSON compatible data format (+ native XML nodes)\n  * set TTL values to stored keys for auto expiring\n  * publish and subscribe to cross-window/tab events\n  * listen for key changes (update, delete) from the current or any other browser window\n  * use any browser since IE6, both in desktop and in mobile\n\n## Browser support\n\nCurrent availability: jStorage supports all major browsers - Internet Explorer 6+, Firefox 2+,\nSafari 4+, Chrome 4+, Opera 10.50+\n\nIf the browser doesn't support data caching, then no exceptions are raised - jStorage can still\nbe used by the script but nothing is actually stored.\n\n## Tests\n\nSee [tests/index.html](http://www.jstorage.info/static/tests/index.html) for unit tests\n\n## Docs\n\nProject homepage and docs: [www.jstorage.info](http://www.jstorage.info)\n\n## License\n\n[Unlicense](http://unlicense.org/) Since version 0.4.7\n\n**MIT** (versions up to 0.4.6)\n\n\n[![Bitdeli Badge](https://d2weczhvl823v0.cloudfront.net/andris9/jstorage/trend.png)](https://bitdeli.com/free \"Bitdeli Badge\")\n\n","maintainers":[{"name":"aibarra988","email":"aibarra988@gmail.com"}],"time":{"modified":"2017-08-21T19:15:45.975Z","created":"2015-12-01T19:02:21.425Z","0.4.8":"2015-12-01T19:02:21.425Z"},"homepage":"https://github.com/aibarra988/jstorage#readme","keywords":["key"],"repository":{"type":"git","url":"git+https://github.com/aibarra988/jstorage.git"},"author":{"name":"Andris Reinman","email":"andris.reinman@gmail.com"},"bugs":{"url":"https://github.com/aibarra988/jstorage/issues"},"license":"UNLICENSED","readmeFilename":"README.md","users":{"jian263994241":true,"psbolden":true},"_attachments":{},"_etag":"W/\"599b3161-204f\"","_lastModified":"Mon, 21 Aug 2017 19:15:45 GMT"}